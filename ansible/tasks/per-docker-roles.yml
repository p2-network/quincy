---
- name: Create a docker network for the per-docker-roles service
  ansible.builtin.docker_network:
    name: per-docker-roles
    state: present
  register: per_docker_roles_network

- name: Create a directory for rolesanywhere-credential-helper
  ansible.builtin.file:
    path: /opt/p2-network/per-docker-roles/{{ per_docker_roles_version }}
    state: directory

- name: Pull per-docker-roles from docker
  ansible.builtin.shell: |
    cd /opt/p2-network/per-docker-roles/{{ per_docker_roles_version }}

    image_name=ghcr.io/thepatrick/per-docker-roles:{{ per_docker_roles_version }}

    id=$(docker create $image_name)

    echo "Copying file from docker container ($id, from $image_name) to local file $local_file_name"

    docker cp $id:/per-docker-roles - > per-docker-roles.tar
    docker rm -v $id

    tar xf per-docker-roles.tar

    rm per-docker-roles.tar
  args:
    creates: /opt/p2-network/per-docker-roles/{{ per_docker_roles_version }}/per-docker-roles

  # TODO: remove all other entries in /opt/p2-network/per-docker-roles/

- name: Add the user 'per-docker-roles'
  ansible.builtin.user:
    name: per-docker-roles
    shell: /bin/bash
    groups: docker
    append: yes

- name: Create systemd unit for per-docker-roles
  ansible.builtin.template:
    src: templates/per-docker-roles/per-docker-roles.service.j2
    dest: /etc/systemd/system/per-docker-roles.service
  vars:
    binary: /opt/p2-network/per-docker-roles/{{ per_docker_roles_version }}/per-docker-roles
    user: per-docker-roles
    listen_on: "{{ per_docker_roles_network.network.IPAM.Config[0].Gateway }}"
    docker_network: "{{ per_docker_roles_network.network.Name }}"
  register: per_docker_roles_service

- name: Start per-docker-roles service
  ansible.builtin.systemd_service:
    name: per-docker-roles
    state: started
    enabled: yes
    daemon_reload: yes

- name: Restart per-docker-roles service
  ansible.builtin.systemd_service:
    name: per-docker-roles
    state: restarted
  when: per_docker_roles_service.changed
